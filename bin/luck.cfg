# [observer]
# If the file name is not given, the observer is not used.
# each 'log_period' timesteps, data is logged to file
#log_grid_csv = grids
#log_perturbations_csv = perturbs.csv
#log_population_scores_csv = popul.dist.csv
log_mutations_csv = mutations.csv
log_population_csv = popul.csv
log_distances_csv = dists.csv
log_environ_csv = environ.csv

log_genes_csv = genes.csv
log_active_genes_csv = genes.on.csv
log_bindingsites_csv = bsites.csv
log_indegree_csv = indegree.csv
log_outdegree_csv = outdegree.csv
#log_ref_genes_csv = genes.ref.csv
#log_retroposons_csv = retroposons.csv

log_genomes_xml = genomes
log_genomes_env_xml = genomes

log_period = 10 #0
log_period_stats = 100
log_period_xml = 10000
#log_path = /home/anton/tmp
log_path = /linuxhome/tmp/anton

# The following is an extension on fluke for closely monitoring the entire
# evolution of an agent
log_ancestors_csv = ancestors.csv
#agent_trace_source_csv = /linuxhome/tmp/anton/000-009/trace.csv
#log_agent_trace_xml = trace

# [simulation]
# Random number generator seed
init_seed = 9
random_seed = 10
environment_seed = 11
# The number of timesteps the simulations is to run
end_time = 600001 #450001

# [population]
# The dimensions of the rectangular grid
grid_x = 150 #150
grid_y = 50 #100
# The fitness threshold determines the dynamics of selecting a neighbour 
# partly. Is a const in the program, for optimization issues.
#sum_fitness_threshold = 1e-4
# Fitness scaling method [ none, linear, power ]
scaling_scheme = power
# Fitness selection method [ random, probalistic ]
selection_scheme = probalistic
# Base score in case all fitness scores are the same
base_score = 0.0
# Agent types
nr_agent_type = 1
# Agent placement [ random, patch ]
agent_placement = random #patch
# Read population from file, agent placement is ignored for the moment
#population_one = /home/anton/tmp/genomes/t00600000.xml
#population_two = 
# Do we want to shuffle the grid
shuffle = false
# Random population or homogeneous one [ random, homogeneous ]
population_start = homo #random

# [environment]
# what type of environment [ constant, poisson, periodic ]
environment = poisson
lambda = 3e-4 
# shift the period (only for periodic)
offset = 10
# From which value to what other value to switch to in environments
# In case of delta agents, the actual values do not matter.
# Network 0 (5,4)
attractors = 0b11111000000001111000 0b11010001101001001011 
#0b11000000000000111110 0b11011000001001011011 0b11110000001001011000

# Network 54 (7,5)
#attractors = 0b00011010101010001110 0b11101001010100011110
# Network 56 (6,5)
#attractors = 0b10111011011011001000 0b11001100110110001010
# Network 105 (4,4)
#attractors = 0b00000011011111110011 0b00011110011000110111
# Network 126 (6,3)
#attractors = 0b01010101000101111000 0b11011000111101110001
# Network 211
#attractors = 0b00100011010010001100 0b10001001110001001000
# Network 243 (new)
#attractors = 0b01011000000111100011 0b10111111010011010000
# Network 336
#attractors = 0b00011001010100001010 0b11010101000000011000
# Network 559
#attractors = 0b00001110010100000110 0b10111010111000000111
# Network 721 (5,3)
#attractors = 0b00011111001101000011 0b10101101111001000111
